let tg = window.Telegram.WebApp;
tg.expand();

let item = "";

let btn1 = document.getElementById("btn-shawarma");
let btn2 = document.getElementById("btn2");
let btn3 = document.getElementById("btn3");
let btn4 = document.getElementById("btn4");
let btn5 = document.getElementById("btn5");
let btn6 = document.getElementById("btn6");

// ... (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º) ...

Telegram.WebApp.onEvent("mainButtonClicked", function(){
    tg.sendData(item);
});

let usercard = document.getElementById("usercard");

let p = document.createElement("p");

p.innerText = `${tg.initDataUnsafe.user.first_name}
${tg.initDataUnsafe.user.last_name}`;

usercard.appendChild(p);

// –ù–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞
const voiceOrderBtn = document.getElementById('voiceOrderBtn');
const voiceInterface = document.getElementById('voiceInterface');
const chatDiv = document.getElementById('chat');
const textInput = document.getElementById('textInput');
const sendTextBtn = document.getElementById('sendTextBtn');
const recordVoiceBtn = document.getElementById('recordVoiceBtn');

let mediaRecorder;
let audioChunks = [];

voiceOrderBtn.addEventListener('click', toggleVoiceInterface);
sendTextBtn.addEventListener('click', () => sendMessage(textInput.value));
recordVoiceBtn.addEventListener('mousedown', startRecording);
recordVoiceBtn.addEventListener('mouseup', stopRecording);

function toggleVoiceInterface() {
    if (voiceInterface.style.display === 'none') {
        voiceInterface.style.display = 'block';
        voiceOrderBtn.textContent = '‚ùå';
    } else {
        voiceInterface.style.display = 'none';
        voiceOrderBtn.textContent = 'üé§';
    }
}

function sendMessage(text) {
    if (text.trim() === '') return;
    
    addMessageToChat('–í—ã', text);
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    tg.sendData(JSON.stringify({type: 'text_message', text: text}));
    
    textInput.value = '';
}

async function startRecording() {
    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorder = new MediaRecorder(stream);
    audioChunks = [];

    mediaRecorder.addEventListener('dataavailable', event => {
        audioChunks.push(event.data);
    });

    mediaRecorder.start();
    recordVoiceBtn.textContent = '–ó–∞–ø–∏—Å—å...';
}

function stopRecording() {
    mediaRecorder.stop();
    recordVoiceBtn.textContent = '–ó–∞–ø–∏—Å—å';
    mediaRecorder.addEventListener('stop', () => {
        const audioBlob = new Blob(audioChunks);
        const reader = new FileReader();
        reader.readAsDataURL(audioBlob);
        reader.onloadend = function() {
            const base64Audio = reader.result.split(',')[1];
            tg.sendData(JSON.stringify({type: 'voice_message', audio: base64Audio}));
        }
    });
}

function addMessageToChat(sender, message) {
    const messageElement = document.createElement('p');
    messageElement.textContent = `${sender}: ${message}`;
    chatDiv.appendChild(messageElement);
    chatDiv.scrollTop = chatDiv.scrollHeight;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
tg.onEvent('message', function(message) {
    const data = JSON.parse(message);
    if (data.type === 'bot_response') {
        addMessageToChat('–ë–æ—Ç', data.text);
        if (data.audio) {
            playAudio(data.audio);
        }
        if (data.order_confirmation) {
            processVoiceOrder(data.text);
        }
    }
});

function playAudio(base64Audio) {
    const audio = new Audio("data:audio/mp3;base64," + base64Audio);
    audio.play();
}

function processVoiceOrder(speechText) {
    speechText = speechText.toLowerCase();
    if (speechText.includes('—à–∞—É—Ä–º–∞')) {
        btn1.click();
    } else if (speechText.includes('–ø–∏—Ç–∞')) {
        btn2.click();
    } else if (speechText.includes('—Ö—É–º—É—Å')) {
        btn3.click();
    } else if (speechText.includes('—à–∞—à–ª—ã–∫') || speechText.includes('–∫—É—Ä–∏—Ü–∞')) {
        btn4.click();
    } else if (speechText.includes('–≥—ë–∑–ª–µ–º–µ')) {
        btn5.click();
    } else if (speechText.includes('—Å—É–ø') || speechText.includes('—á–µ—á–µ–≤–∏—á–Ω—ã–π')) {
        btn6.click();
    } else {
        addMessageToChat('–ë–æ—Ç', '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
}
